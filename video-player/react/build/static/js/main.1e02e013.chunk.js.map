{"version":3,"sources":["VideoEmbed.js","VideoPlayer.js","App.js","reportWebVitals.js","index.js"],"names":["VideoTag","props","cloudName","publicId","width","crop","controls","muted","overlay","color","gravity","y","VideoPlayer","cloudinary","Cloudinary","cloud_name","secure","useEffect","videoPlayer","document","querySelector","fluid","autoplay","transformation","format","effect","x","className","App","VideoEmbed","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"iLAkBeA,MAhBf,SAAkBC,GAChB,IAAMC,EAAYD,EAAMC,UACxB,OACE,cAAC,IAAD,CAAmBA,UAAWA,EAA9B,SACE,cAAC,IAAD,CAAOC,SAAS,UAAUC,MAAM,MAAMC,KAAK,MAAMC,UAAQ,EAACC,OAAK,EAA/D,SACE,cAAC,IAAD,CACEC,QAAQ,8BACRC,MAAM,SACNC,QAAQ,aACRC,EAAE,Y,qBC8BGC,MApCf,SAAqBX,GACnB,IAAMY,EAAa,IAAIC,aAAW,CAChCC,WAAYd,EAAMC,UAClBc,QAAQ,IA4BV,OAHAC,qBAAU,WACR,OAvBAJ,EAAWK,YAAYC,SAASC,cAAc,aAAc,CAC1DjB,SAAU,UACVkB,OAAO,EACPC,UAAU,EACVf,OAAO,EACPD,UAAU,EACViB,eAAgB,CACd,CAAEnB,MAAO,IAAKC,KAAM,OACpB,CACEG,QAAS,aACTgB,OAAQ,MACRpB,MAAO,IACPqB,OAAQ,sBACRf,QAAS,aACTgB,EAAG,EACHf,EAAG,MAQiB,MAGxB,uBAAOgB,UAAU,cCbRC,MApBf,WACE,OACE,qBAAKD,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,kDACA,sBAAKA,UAAU,YAAf,UACE,gCACE,wDACA,cAACE,EAAD,CAAY3B,UAAU,2BAExB,gCACA,yDACE,cAAC,EAAD,CAAaA,UAAU,oCCJpB4B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFtB,SAASuB,eAAe,SAM1BZ,K","file":"static/js/main.1e02e013.chunk.js","sourcesContent":["import React from 'react'\nimport { Video, Transformation, CloudinaryContext } from 'cloudinary-react'\nfunction VideoTag(props) {\n  const cloudName = props.cloudName;\n  return (\n    <CloudinaryContext cloudName={cloudName}>\n      <Video publicId=\"rooster\" width=\"320\" crop=\"fit\" controls muted>\n        <Transformation\n          overlay=\"text:arial_100_bold:Rooster\"\n          color=\"yellow\"\n          gravity=\"north_east\"\n          y=\"20\"\n        />\n      </Video>\n    </CloudinaryContext>\n  )\n}\n\nexport default VideoTag\n","import React, { useEffect } from \"react\";\nimport { Cloudinary } from \"cloudinary-core\";\nimport \"cloudinary-video-player/dist/cld-video-player.light.min\";\nimport \"cloudinary-video-player/dist/cld-video-player.light.min.css\";\n\nfunction VideoPlayer(props) {\n  const cloudinary = new Cloudinary({\n    cloud_name: props.cloudName,\n    secure: true,\n  });\n  const videoPlayerInit = () => {\n    cloudinary.videoPlayer(document.querySelector(\".fn-video\"), {\n      publicId: \"rooster\",\n      fluid: true,\n      autoplay: false,\n      muted: true,\n      controls: true,\n      transformation: [\n        { width: 320, crop: 'fit' },\n        {\n          overlay: 'video-logo',\n          format: 'png',\n          width: 100,\n          effect: \"replace_color:white\",\n          gravity: 'north_east',\n          x: 5,\n          y: 5\n        }\n      ]\n    });\n  \n  \n  };\n  useEffect(() => {\n    return (videoPlayerInit(),[]);\n  });\n  return (\n      <video className=\"fn-video\" />\n  );\n}\n\nexport default VideoPlayer;\n","import React from \"react\";\nimport \"./styles.css\";\nimport VideoEmbed from \"./VideoEmbed\";\nimport VideoPlayer from \"./VideoPlayer\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h2>Cloudinary Video</h2>\n        <div className=\"container\">\n          <div>\n            <h3>Cloudinary React Video</h3>\n            <VideoEmbed cloudName=\"cloudinary-training\" />\n          </div>\n          <div>\n          <h3>Cloudinary Video Player</h3>\n            <VideoPlayer cloudName=\"cloudinary-training\" />\n          </div>\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}